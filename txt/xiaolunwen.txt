题目：基于python的多平台舆情数据爬虫的设计与实现

摘要：对舆情数据进行抓取是进行舆情分析的前提，因此设计一个针对多平台，且稳定、高效率的爬虫程序对舆情数据的抓取尤为重要。本文以bilibili、抖音、小红书、微博等国内主流自媒体平台为数据抓取对象，以python语言为开发工具，对这些平台的帖子以及评论数据进行抓取，并针对不同用户对不同数据格式的要求，将抓取到的数据存储为csv、json、mysql数据库等数据格式，可方便有关单位部门对舆情数据的进一步分析，进而对舆情进行有效监管。


关键词：python；爬虫；舆情；多平台 

0 引言:
随着互联网的迅速发展，微博、小红书、抖音等网络自媒体平台因其便捷的意见表达方式和即时的信息传播速度而备受欢迎，已成为人们表达情感和发表见解的主要渠道。然而，舆情信息具有大容量、高速度和多样性等大数据特征，使得个人意见在缺乏指导和监督的情况下，在无处不在的互联网上被无限放大，很容易引发具有破坏性的网络舆情事件。随着公众舆情数据在决策和管理中的日益重要性日益凸显，对舆情数据进行实时监测和分析已成为迫切需求。而对舆情数据分析的前提是有效地抓取这些数据。因此，设计一个稳定高效的多平台爬虫系统对舆情数据的收集至关重要。目前国内主流的自媒体平台包括Bilibili、抖音、小红书、微博等。本文研发了一个基于Python的多平台爬虫系统，能够抓取这些国内主流自媒体平台上的帖子和评论数据，并将数据以不同的格式保存，有利于后续深入分析公众舆情信息。

1 相关技术及原理

1.1 Playwright 
Playwright是一款开源的Node.js库,用于自动化浏览器测试和用户界面工程。它可以模拟用户在Chromium、Firefox和WebKit内核的浏览器中完成各种操作,如点击、输入、选择文件等,并提供一致的跨浏览器API。具体来说,Playwright首先会使用不同浏览器内核启动浏览器环境。然后,它提供高级API来控制浏览器,开发人员可以通过API实现页面导航、DOM查询以及模拟用户输入等操作。开发人员可以使用Playwright编写测试脚本,例如使用page.goto()打开页面,page.click()和page.type()模拟交互,最后使用expect()断言测试结果。
本爬虫系统主要是利用playwright搭桥，保留登录成功后的上下文浏览器环境，通过执行JS表达式获取一些加密参数，通过此方式，免去了复现核心加密JS代码，逆向难度大大降低。

1.2 网络爬虫
爬虫技术是一种通过程序自动抓取网页内容的技术。它模拟人工浏览网页的行为,依次访问每个页面上的所有链接,并下载和存储页面内容[3]。具体来说,爬虫程序首先从一个或多个起始URL地址开始,这些URL构成种子列表。然后,它会依次从种子列表中取出URL,使用HTTP协议下载对应页面的HTML源码。在下载页面源码的同时,爬虫程序还会对源码进行解析,提取页面中所有子链接的URL地址,同时对新提取出的链接进行筛选,剔除一些无效链接或已经抓取过的重复链接。剩余的有效新链接会被加入待抓取链接队列。当待抓取链接队列不为空时,程序就会重复执行从页面下载到链接解析的流程,继续抓取新页面。最后,爬取的页面HTML源码以及抽取的结构化数据会存储在本地数据库或文件系统中。为了更高效地爬取信息,现代爬虫还会利用多线程并发下载和设置User-Agent等技术来规避被服务器识别。目前常见的爬虫框架包括Scrapy和BeautifulSoup等。

1.3 MySQL数据库
MySQL是一款开源的关系型数据库管理系统，具有高性能、稳定可靠、易于使用和管理的特点。支持多种操作系统，提供丰富的功能和灵活的配置选项，被广泛应用于Web应用程序开发中。MySQL支持标准SQL语言，同时提供存储过程、触发器、视图等高级特性，能够与各种编程语言和开发框架无缝集成，是许多网站和应用程序的首选数据库解决方案。

2 系统架构
本文系统主要包含四个模块：数据抓取、情感倾向判断、LDA主题分析、数据可视化。


2.5 系统工作流程
基于python的多平台舆情数据爬虫的数据抓取流程如图所示。

2.3 配置文件
爬虫的配置文件名为base_config.py，其中包含了针对不同平台和抓取类型的配置参数，以及登录类型的设置。

2.1 抽象类的实现
在面向对象设计中,使用抽象类可以提高代码的可扩展性和可维护性。抽象类描述的是一类事物的公共属性和行为,而不是具体实现细节。它定义了一个标准接口,从而统一了不同子类的接口调用方式。
此外,抽象类也有利于代码的维护和测试。因为所有子类都需要实现的标准接口已被明确定义,开发人员很容易理解子类的行为和约束范围。测试人员也可以针对抽象类编写通用测试用例,从而覆盖所有子类的公共功能。
使用类抽象可以提高代码的可扩展性、可维护性和可测试性,这对一个长期维护和迭代开发的项目尤为重要。它有助于实现松耦合的设计,提高项目的可管理性。
对于本项目来说,不同平台的数据爬取任务本质上都是相同的,都需要实现获取数据和处理数据等步骤。但具体实现会因平台而异。使用抽象类来描述这一通用流程,子类只需实现自己特定平台的细节,就可以很方便地接入系统运行。这样一来,未来如果需要支持新的平台,只需添加新的子类即可,无需对原有代码进行大改动,这就实现了高内聚低耦合的设计原则。类的抽象结构如图所示。


2.1 反爬虫优化
在使用爬虫进行数据采集时，经常会遇到平台方的反爬虫机制的限制，比较常见的反爬虫机制有登录验证、验证码、IP限制、请求频率限制、数据加密等。这些机制为获取相应舆情数据增加了难度。本文通过以下方法来绕过平台的反爬虫机制。
1）本项目使用了Playwright框架来模拟账号登录的过程，可以使用三种登录方式登录平台，分别为手机号登录、Cookie验证、二维码登录，并通过Playwright模拟真实用户的操作行为，如点击、滚动、输入等，让网站无法通过行为分析来识别爬虫。在请求页面或执行操作时，添加随机的延迟时间，模拟人类的操作间隔，避免频繁请求被识别为爬虫。
2）使用代理IP池。自媒体平台对每个IP设置了访问频率限制
用户频繁对网页进行访问可能会导致 IP 被封，通过设置代理IP来隐藏真实IP地址，以防止被封禁[4]。

然后，通过Playwright启动一个浏览器上下文，并加载一个用于防检测的JavaScript脚本。接着，创建一个与微博网站交互的客户端，并检测是否登录成功。如果未登录，则调用WeiboLogin类进行账号登录操作。登录成功后，更新手机端登录的Cookie信息，以确保后续数据采集的顺利进行。登录流程图如图所示。

2.2 多线程爬虫

传统的单线程爬虫在处理大量请求时，由于IO操作的阻塞特性，会导致程序在等待服务器响应时无法进行其他任务，造成资源的浪费和效率的降低。特别是在需要频繁发送请求和获取数据的场景下，单线程爬虫的效率更是难以令人满意。

为了解决这一问题，本文引入了asyncio库，利用其协程的特性实现异步IO操作。结合httpx库作为HTTP客户端，可以高效地发送和接收HTTP请求，实现快速的数据获取。同时，通过Semaphore信号量的机制，可以控制同时运行的协程数量，避免过多的并发请求对服务器造成压力，保证爬虫的稳定性。

在多线程爬虫的实现过程中，本文将爬虫任务分解成多个协程，每个协程负责一个请求任务。通过Semaphore信号量控制同时运行的协程数量，有效地管理并发请求，避免过载服务器。这种多线程的并发模型使得爬虫可以同时处理多个请求，充分利用系统资源，大大提升了数据爬取的效率。

2.3 数据清洗
由于在自媒体平台中抓取的数据可能存在大量的无意义内容，如“@XX”“网页链接”、表情符号等，这些内容会干扰后续的数据分析和挖掘工作，因此需要对数据进行清洗，可以利用正则表达式对爬取的数据进行处理。通过正则表达式，可以轻松地筛选出这些无意义内容并将其去除，从而提高数据的质量和可用性。例如，可以使用正则表达式来匹配和去除数据中的表情符号，如：😂、😊、👍等。通过编写相应的正则表达式模式，可以将这些表情符号替换为空字符串，从而消除评论中的干扰内容。类似地，我们还可以使用正则表达式来过滤掉数据中的特殊符号、链接、广告信息等，使得清洗后的数据更加干净和规范。通过这样的数据清洗过程，我们可以更好地利用数据进行后续的分析和挖掘工作。

2.4 数据存储
从平台上爬取的舆情数据往往比较杂乱，不利于数据的后续分析，因此需要将数据以结构化的形式进行存储。

从自媒体平台抓取到的数据有两种类型，分别为帖子数据以及帖子下的评论数据，程序将根据配置文件将数据存储为相应的格式，分别为csv、json、mysql格式。 

为了将数据存储进数据库中，本文使用了tortoise-orm模块，它是一个强大的异步ORM框架，可以帮助开发者简化异步Python应用程序中的数据库操作。



2.5 ip代理
代理IP，顾名思义，是指通过代理服务器获取的IP地址，用于隐藏真实的网络信息，达到保护个人隐私和改善网络连接的目的。代理IP的主要作用是在访问网络资源时，通过转发请求和响应的方式，间接与目标服务器进行通信，从而使真实请求方的身份得到隐藏。这种方式对于一些需要匿名访问或避免屏蔽的场景非常有用。

通过使用代理IP，可以避免同一IP频繁请求被目标网站屏蔽，从而保证数据采集的顺利进行。选择合适的代理服务器和设置合理的请求间隔时间，可以提高数据采集的稳定性和效率。

本文使用了极速Http（https://www.jisuhttp.com/）的ip代理服务，通过使用该服务的接口来获取需要使用到的代理IP地址。由于每次通过该接口提取IP都要消耗IP的数量，并且每个IP都有一个最长的30分钟过期时效，因此，为了最大化利用每一个ip资源，在每次调用接口获取代理IP时都会先将获取的代理IP存储进Redis缓存，并设置好一个过期的期限，这样一来，每次爬虫使用代理IP时都会优先从Redis缓冲中获取有效代理IP，避免了资源的浪费。

2.6 数据分析模块


2.7 数据可视化



3 实验及结果评估

3.1 运行环境

项目		参数
计算机操作系统	Windows10
CPU		i5-6200U、2.3GHz
RAM		8GB
Python版本		3.8.17
playwright版本		1.43.0

3.2 多线程效率分析





4 结语

通过本文的研究和实践，我们成功地设计并实现了一个基于Python的多平台舆情数据爬虫系统，经过测试验证，该系统能够有效地从国内主流社交平台如Bilibili、抖音、小红书和微博等平台上抓取帖子和评论数据，并将数据保存为多种格式，为后续舆情数据分析提供了便利。在系统架构方面，我们使用了Playwright来模拟账号登录，绕过反爬虫机制，同时利用多线程抓取和异步IO操作提高了数据获取的效率。

通过本研究，我们深刻认识到舆情数据的重要性和多平台数据抓取的挑战。我们的研究成果不仅为舆情监管和分析提供了技术支持，也为今后类似项目的开发提供了有益的经验和启示。

未来的工作方向包括进一步优化系统性能，提高数据抓取的准确性和速度，探索更多社交平台的数据抓取方法，以及加强数据处理和分析的能力。我们相信，通过不懈的努力和持续的创新，我们的研究将为舆情监管和数据分析领域带来更多的启迪和贡献。

在这个信息爆炸的时代，舆情数据的采集和分析将继续发挥重要作用，我们期待着将来更多的研究和实践，为社会舆情监管和数据分析领域贡献我们的力量。

[参考文献]

[1] 仰义方，赵淑杰．网络环境下党的舆论引导能力建设的困境及路径[J/OL]．南
京邮电大学学报(社会科学版).https://doi.org/10.14132/j.cnki.nysk.20240403.001
[2] 王玉立,张一鸣.人工智能技术加强网络安全建设的研究
[J].网络空间安全,2021,12(Z5):73-78.


[3]孙易冰,赵子东,刘洪波.一种基于网络爬虫技术的价格指数计算模型[J].统计研究,2014,31(10):74-80.DOI:10.19343/j.cnki.11-1302/c.2014.10.012.

[4]刘子谦,王志强.基于爬虫和文本处理的微博舆情分析系统[J].北京电子科技学院学报,2020,28(03):31-39.

https://sub.s1-bbxy.com:8888/2cad2128/01b0b586-060c-4a1a-898b-49b382f926f7/Pgexuy2wgnvQsGoJ?x=48fd675a68e4&sub=clash&clash=1

https://s1.byte33.com/api/v1/client/subscribe?token=84165060ea0f6a2bf1e3c2bf0cd0957e

